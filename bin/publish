#!/bin/bash -e

. bin/build_utils

REDHAT_IMAGE='scan.connect.redhat.com/ospid-1c46a2de-1d88-40e6-a433-7114ad0099cb/conjur-openshift-authenticator-client'

readonly REGISTRY="cyberark"
readonly TAG="$(version_tag)"
readonly VERSION="$(cat VERSION)"

readonly IMAGES=(
  "conjur-kubernetes-authenticator"
  "conjur-authn-k8s-client"
)

readonly TAGS=(
  "$VERSION"
  "latest"
)

# fetching tags is required for git_description to work
git fetch --tags
git_description=$(git describe)

# tagging and pushing to dockerhub
for image_name in "${IMAGES[@]}"; do
   echo "Tagging $REGISTRY/$image_name:$TAG"
   docker tag conjur-authn-k8s-client:dev "$image_name:$TAG"

  # if itâ€™s not a tagged commit, VERSION will have extra characters (i.e. -g666c4b2), so that commit won't be published
  # only when tag matches the VERSION, push VERSION and latest releases
  # and x and x.y releases
  if [ "$git_description" = "v${VERSION}" ]; then
    echo "Revision $git_description matches version $VERSION exactly. Pushing to Dockerhub..."

    for tag in "${TAGS[@]}" $(gen_versions $VERSION); do
      echo "Tagging and pushing $REGISTRY/$image_name:$tag"
      docker tag "$image_name:$TAG" "$REGISTRY/$image_name:$tag"
      docker push "$REGISTRY/$image_name:$tag"
      
      echo "Tagging and pushing $REGISTRY/$image_name:latest"
      docker tag "$image_name:$TAG" "$REGISTRY/$image_name:latest"
      docker push "$REGISTRY/$image_name:latest"
    done
  fi
done

# tagging and pushing to redhat container registry
# only push when the tag matches the VERSION
if [ "$git_description" = "v${VERSION}" ]; then
  docker tag conjur-authn-k8s-client:dev-redhat "$REDHAT_IMAGE:$VERSION"

  if docker login scan.connect.redhat.com -u unused -p $REDHAT_API_KEY; then
    # you can't push the same tag twice to redhat registry, so ignore errors
    if ! docker push "${REDHAT_IMAGE}:${VERSION}"; then
      echo 'RedHat push FAILED! (maybe the image was pushed already?)'
      exit 0
    fi
  else
    echo 'Failed to log in to scan.connect.redhat.com'
    exit 1
  fi
fi
