#!/bin/bash -e

. bin/build_utils

REDHAT_IMAGE='scan.connect.redhat.com/ospid-1c46a2de-1d88-40e6-a433-7114ad0099cb/conjur-openshift-authenticator-client'

readonly REGISTRY="cyberark"
readonly VERSION="$(short_version_tag)"

readonly IMAGES=(
  "conjur-kubernetes-authenticator"
  "conjur-authn-k8s-client"
)

readonly TAGS=(
  "$VERSION"
  "latest"
)

# fetching tags is required for git_description to work
git fetch --tags
git_description=$(git describe)

# if itâ€™s not a tagged commit, VERSION will have extra characters (i.e. -g666c4b2), so that commit won't be published
# only when tag matches the VERSION, push VERSION and latest releases
# and x and x.y releases
if [ "$git_description" = "v${VERSION}" ]; then
  echo "Revision $git_description matches version $VERSION exactly"

  echo "Pushing to Dockerhub..."
  source_image=conjur-authn-k8s-client:dev
  # tagging and pushing to dockerhub
  for image_name in "${IMAGES[@]}"; do
      for tag in "${TAGS[@]}" $(gen_versions "$VERSION"); do
        echo "Tagging and pushing $REGISTRY/$image_name:$tag"
        docker tag $source_image "$REGISTRY/$image_name:$tag"
        docker push "$REGISTRY/$image_name:$tag"

        echo "Tagging and pushing $REGISTRY/$image_name:latest"
        docker tag $source_image "$REGISTRY/$image_name:latest"
        docker push "$REGISTRY/$image_name:latest"
      done
  done

  echo "Pushing to RedHat container registry..."
  source_redhat_image=conjur-authn-k8s-client-redhat:dev
  docker tag $source_redhat_image "$REDHAT_IMAGE:$VERSION"

  if docker login scan.connect.redhat.com -u unused -p "$REDHAT_API_KEY"; then
    # you can't push the same tag twice to redhat registry, so ignore errors
    if ! docker push "${REDHAT_IMAGE}:${VERSION}"; then
      echo 'RedHat push FAILED! (maybe the image was pushed already?)'
      exit 0
    fi
  else
    echo 'Failed to log in to scan.connect.redhat.com'
    exit 1
  fi
fi
